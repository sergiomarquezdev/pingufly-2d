---
description: Performance optimization techniques for Phaser game development
globs: /src/**/*.{js,ts}
---
- Minimize object creation during gameplay to reduce garbage collection pauses
- Implement efficient particle systems and sprite batching for complex visual effects
- Use texture atlases to reduce draw calls and improve rendering performance
- Implement world streaming or chunking for large game worlds to manage memory usage
- Optimize asset loading with progressive loading techniques and asset compression
- Use Phaser's game loop (Scene update) for smooth animations and game loop management
- Be mindful of the complexity of your scene and optimize draw order (Scene.depthSort())
- Use smaller, low-res textures for older mobile devices
- Implement proper bounds management to avoid unnecessary calculations
- Use caching for all the data that is needed multiple times
- Implement lazy loading where appropriate (load assets or game elements only when needed)
- Use pre-fetching for critical data and assets (load essential assets early)
